hist(tableS1)
tableS1
hist(S1)
hist(S1, breaks = 37)
## (iii)
set.seed(37)
S1 <- sample(outcomes, 1000, replace = TRUE)
S1
tableS1 <- table(S1)
tableS1
hist(S1, breaks = 37)
hist(S1, bins = 1)
hist(S1, breaks = 37)
hist(S1, breaks = 37, center)
hist(S1, breaks = 37)
?hist
hist(S1, breaks = 37, mids)
hist(S1, mids)
hist(S1, breaks = 0:37)
hist(S1, breaks = -0.5:36.5)
## (vi) (a)
count <- 0
for (i in 1:length(S1)){
if (S1[i]<20){
count <- count +1
}
}
proba <- count/length(S1)
## (vi) (b)
count <- 0
for (i in 1:length(S1)){
if (S1[i]>= 10){
count <- count +1
}
}
probb <- count/length(S1)
## (vi) (c)
count <- 0
for (i in 1:length(S1)){
if (S1[i]>3 && S1[i]<=9){
count <- count +1
}
}
probc <- count/length(S1)
## (v)(a)
mean(S1)
## (v) (b)
sa(S1)
## (v)(b)
sd(S1)
## (v)(b)
median(S1)
##(v)(c)
sd(S1)
??skewness
##(v)(d)
skewness(S1)
##(v)(d)
pacman::p_load(moments)
skewness(S1)
n <-10
p <- 0.7
rbinom(n,500,p)
rbinom(500,n,p)
S <- rbinom(500,n,p)
table(S)
n <-10
p <- 0.7
## (i)
set.seed(37)
S <- rbinom(500,n,p)
table(S)
## (ii) (b)
table(B)/length(B)
B <- rbinom(500,n,p)
## (ii) (a)
table(B)
## (ii) (b)
table(B)/length(B)
## (i)
set.seed(37)
B <- rbinom(500,n,p)
## (ii) (a)
table(B)
## (ii) (b)
table(B)/length(B)
## (iii) (c)
x <- 0:10
round(dbinom(x,n,p),2)
## (i)
set.seed(37)
B <- rbinom(500,n,p)
## (ii) (a)
table(B)
## (ii) (b)
table(B)/length(B)
## (iii) (c)
x <- 0:10
round(dbinom(x,n,p),2)
round(dbinom(x,n,p),3)
## (i)
set.seed(37)
B <- rbinom(500,n,p)
## (ii) (a)
table(B)
## (ii) (b)
table(B)/length(B)
## (iii) (c)
x <- 0:10
round(dbinom(x,n,p),3)
## (ii) (d)
length(B[B<=6])/length(B)
pbinom(6,n,p)
## (iii) (a)
hist(B, breaks = -0.5:10.5)
## (iii) (b)
lines(x,100*dbinom(x,n,p), type = "o", col = "red")
## (iii) (b)
lines(x,500*dbinom(x,n,p), type = "o", col = "red")
## (iii) (a)
hist(B, breaks = -0.5:10.5)
## (iii) (b)
lines(x,500*dbinom(x,n,p), type = "o", col = "red")
## (iii) (a)
hist(B, breaks = -0.5:10.5)
## (iii) (b)
lines(x,500*dbinom(x,n,p), col = "red")
## (iii) (a)
hist(B, breaks = -0.5:10.5)
## (iii) (b)
lines(x,500*dbinom(x,n,p), type = "o", col = "red")
## (iv) (a)
mean(B)
n*p
## (iv) (b)
sd(B)
(n*p*(1-p))^(1/2)
## (iv) (b)
sd(B)
## (iv) (c)
quantile(B, 0.75) - quantile(B, 0.25)
qbinom(0.75, n, p) - qbinom(0.25,n,p)
## (v) (a)
StdDev <- zeros(500)
## (v) (a)
StdDev <- seq(0,500)
## (v) (a)
StdDev <- rep(0,500)
StdDev[i] <- sd(B[1:i])
## (v) (b)
for (i in 1:500){
StdDev[i] <- sd(B[1:i])
}
## (v) (c)
x <- 1:500
plot(x, StdDev)
abline(h=2, col="red")
(n*p*(1-p))^(1/2)
abline(h=1.45, col="red")
abline(h=1.45, col="red", lty = 2)
setwd("~/GitHub/MCM/Trading Data")
# read in data
gold <- read.csv("gold.csv")
# load package
pacman::p_load(tidyverse)
# define zero matrices
exp_value <- matrix(0, nrow = length(gold$Value), ncol = 1)
sd <- matrix(0, nrow = length(gold$Value), ncol = 1)
# finding running mean and standard deviation
for (i in 1:length(gold$Value)){
run <- gold[1:i,2]
exp_value [i,1] <- mean(run, na.rm = TRUE)
sd[i,1] <- sd(run, na.rm = TRUE)
}
# combine mean and standard deviation to original data
gold <- data.frame(gold, exp_value, sd)
# read in data
bitcoin <- read.csv("bitcoin.csv")
# load package
pacman::p_load(tidyverse)
# define zero matrices
exp_value <- matrix(0, nrow = length(gold$Value), ncol = 1)
sd <- matrix(0, nrow = length(gold$Value), ncol = 1)
# finding running mean and standard deviation
for (i in 1:length(bitcoin$Value)){
run <- bitcoin[1:i,2]
exp_value [i,1] <- mean(run, na.rm = TRUE)
sd[i,1] <- sd(run, na.rm = TRUE)
}
# combine mean and standard deviation to original data
bitcoin <- data.frame(bitcoin, exp_value, sd)
# define zero matrices
exp_perc_change <- matrix(0, nrow = length(gold$Value), ncol = 1)
diff <- matrix(0, nrow = length(gold$Value), ncol = 1)
perc_diff <- matrix(0, nrow = length(gold$Value), ncol = 1)
for (i in 3:length(gold$Value)-1){
if (!is.nan(gold[i,2])){
x<- gold[i,2]
}
if (!is.nan(gold[i+1,2])){
diff[i+1] <- (gold[i+1,2] - x)
perc_diff[i+1] <- (gold[i+1,2]-x)/x
}
}
gold <- data.frame(gold, diff, perc_diff)
for (i in 1:length(gold$diff)){
if (gold[i,5] == 0){
gold[i,5] = NA
}
}
# define zero matrices
exp_perc_change <- matrix(0, nrow = length(gold$Value), ncol = 1)
sd_perc_change <- matrix(0, nrow = length(gold$Value), ncol = 1)
exp_diff_change <- matrix(0, nrow = length(gold$Value), ncol = 1)
sd_diff_change <- matrix(0, nrow = length(gold$Value), ncol = 1)
for (i in 1:length(gold$Value)){
run <- gold[1:i,5]
runa <- gold[1:i,6]
exp_perc_change [i,1] <- mean(runa, na.rm = TRUE)
sd_perc_change[i,1] <- sd(runa, na.rm = TRUE)
exp_diff_change [i,1] <- mean(run, na.rm = TRUE)
sd_diff_change[i,1] <- sd(run, na.rm = TRUE)
}
gold <- data.frame(gold, exp_perc_change, sd_perc_change, exp_diff_change, sd_diff_change)
gbm_loop <- function(nsim = 100, t = 25, mu = 0, sigma = 0.1, S0 = 100, dt = 1./365) {
gbm <- matrix(ncol = nsim, nrow = t)
for (simu in 1:nsim) {
gbm[1, simu] <- S0
for (day in 2:t) {
epsilon <- rnorm(1)
dt = 1 / 365
gbm[day, simu] <- gbm[(day-1), simu] * exp((mu - sigma * sigma / 2) * dt + sigma * epsilon * sqrt(dt))
}
}
return(gbm)
}
library(tidyverse)
nsim <- 1
t <- 30
mu <- gold[30,7]
sigma <- gold[30,8]
S0 <- gold[30,2]
library(tidyverse)
nsim <- 1
t <- 30
mu <- 0
sigma <- gold[30,4]
S0 <- gold[30,2]
gbm <- gbm_loop(nsim, t, mu, sigma, S0)
gbm_df <- as.data.frame(gbm) %>%
mutate(ix = 1:nrow(gbm)) %>%
pivot_longer(-ix, names_to = 'sim', values_to = 'price')
gbm_df <- data.frame(gbm_df, actual=gold$Value[30:59])
gbm_df %>%
ggplot(aes(x=ix)) +
geom_line(aes(y =price)) +
geom_line(aes(y =actual)) +
theme(legend.position = 'none')
mu <- 2
sigma <- gold[30,4]
S0 <- gold[30,2]
gbm <- gbm_loop(nsim, t, mu, sigma, S0)
gbm_df <- as.data.frame(gbm) %>%
mutate(ix = 1:nrow(gbm)) %>%
pivot_longer(-ix, names_to = 'sim', values_to = 'price')
gbm_df <- data.frame(gbm_df, actual=gold$Value[30:59])
gbm_df %>%
ggplot(aes(x=ix)) +
geom_line(aes(y =price)) +
geom_line(aes(y =actual)) +
theme(legend.position = 'none')
library(tidyverse)
nsim <- 1
t <- 30
mu <- 4
sigma <- gold[30,4]
S0 <- gold[30,2]
gbm <- gbm_loop(nsim, t, mu, sigma, S0)
gbm_df <- as.data.frame(gbm) %>%
mutate(ix = 1:nrow(gbm)) %>%
pivot_longer(-ix, names_to = 'sim', values_to = 'price')
gbm_df <- data.frame(gbm_df, actual=gold$Value[30:59])
gbm_df %>%
ggplot(aes(x=ix)) +
geom_line(aes(y =price)) +
geom_line(aes(y =actual)) +
theme(legend.position = 'none')
library(tidyverse)
nsim <- 1
t <- 30
mu <- gold[30,3]
sigma <- gold[30,4]
S0 <- gold[30,2]
gbm <- gbm_loop(nsim, t, mu, sigma, S0)
gbm_df <- as.data.frame(gbm) %>%
mutate(ix = 1:nrow(gbm)) %>%
pivot_longer(-ix, names_to = 'sim', values_to = 'price')
gbm_df <- data.frame(gbm_df, actual=gold$Value[30:59])
gbm_df %>%
ggplot(aes(x=ix)) +
geom_line(aes(y =price)) +
geom_line(aes(y =actual)) +
theme(legend.position = 'none')
library(tidyverse)
nsim <- 1
t <- 30
mu <- gold[30,5]
sigma <- gold[30,10]
S0 <- gold[30,2]
gbm <- gbm_loop(nsim, t, mu, sigma, S0)
gbm_df <- as.data.frame(gbm) %>%
mutate(ix = 1:nrow(gbm)) %>%
pivot_longer(-ix, names_to = 'sim', values_to = 'price')
gbm_df <- data.frame(gbm_df, actual=gold$Value[30:59])
gbm_df %>%
ggplot(aes(x=ix)) +
geom_line(aes(y =price)) +
geom_line(aes(y =actual)) +
theme(legend.position = 'none')
library(tidyverse)
nsim <- 1
t <- 30
mu <- gold[30,9]
sigma <- gold[30,10]
S0 <- gold[30,2]
gbm <- gbm_loop(nsim, t, mu, sigma, S0)
gbm_df <- as.data.frame(gbm) %>%
mutate(ix = 1:nrow(gbm)) %>%
pivot_longer(-ix, names_to = 'sim', values_to = 'price')
gbm_df <- data.frame(gbm_df, actual=gold$Value[30:59])
gbm_df %>%
ggplot(aes(x=ix)) +
geom_line(aes(y =price)) +
geom_line(aes(y =actual)) +
theme(legend.position = 'none')
library(tidyverse)
nsim <- 1
t <- 30
mu <- gold[30,9]
sigma <- gold[30,10]/sqrt(30)
S0 <- gold[30,2]
gbm <- gbm_loop(nsim, t, mu, sigma, S0)
gbm_df <- as.data.frame(gbm) %>%
mutate(ix = 1:nrow(gbm)) %>%
pivot_longer(-ix, names_to = 'sim', values_to = 'price')
gbm_df <- data.frame(gbm_df, actual=gold$Value[30:59])
gbm_df %>%
ggplot(aes(x=ix)) +
geom_line(aes(y =price)) +
geom_line(aes(y =actual)) +
theme(legend.position = 'none')
library(tidyverse)
nsim <- 1
t <- 30
mu <- gold[30,9]
sigma <- gold[30,10]
S0 <- gold[30,2]
gbm <- gbm_loop(nsim, t, mu, sigma, S0)
gbm_df <- as.data.frame(gbm) %>%
mutate(ix = 1:nrow(gbm)) %>%
pivot_longer(-ix, names_to = 'sim', values_to = 'price')
gbm_df <- data.frame(gbm_df, actual=gold$Value[30:59])
gbm_df %>%
ggplot(aes(x=ix)) +
geom_line(aes(y =price)) +
geom_line(aes(y =actual)) +
theme(legend.position = 'none')
library(tidyverse)
nsim <- 1
t <- 30
mu <- gold[30,9]
sigma <- gold[30,10]
S0 <- gold[30,2]
dt <- 1./30
gbm <- gbm_loop(nsim, t, mu, sigma, S0)
gbm_df <- as.data.frame(gbm) %>%
mutate(ix = 1:nrow(gbm)) %>%
pivot_longer(-ix, names_to = 'sim', values_to = 'price')
gbm_df <- data.frame(gbm_df, actual=gold$Value[30:59])
gbm_df %>%
ggplot(aes(x=ix)) +
geom_line(aes(y =price)) +
geom_line(aes(y =actual)) +
theme(legend.position = 'none')
library(tidyverse)
nsim <- 1
t <- 30
mu <- gold[30,9]
sigma <- gold[30,10]
S0 <- gold[30,2]
gbm <- gbm_loop(nsim, t, mu, sigma, S0)
gbm_df <- as.data.frame(gbm) %>%
mutate(ix = 1:nrow(gbm)) %>%
pivot_longer(-ix, names_to = 'sim', values_to = 'price')
gbm_df <- data.frame(gbm_df, actual=gold$Value[30:59])
gbm_df %>%
ggplot(aes(x=ix)) +
geom_line(aes(y =price)) +
geom_line(aes(y =actual)) +
theme(legend.position = 'none')
library(tidyverse)
nsim <- 1
t <- 30
mu <- 30*gold[30,9]
sigma <- sqrt(30)*gold[30,10]
S0 <- gold[30,2]
gbm <- gbm_loop(nsim, t, mu, sigma, S0)
gbm_df <- as.data.frame(gbm) %>%
mutate(ix = 1:nrow(gbm)) %>%
pivot_longer(-ix, names_to = 'sim', values_to = 'price')
gbm_df <- data.frame(gbm_df, actual=gold$Value[30:59])
gbm_df %>%
ggplot(aes(x=ix)) +
geom_line(aes(y =price)) +
geom_line(aes(y =actual)) +
theme(legend.position = 'none')
gbm_loop <- function(nsim = 100, t = 25, mu = 0, sigma = 0.1, S0 = 100, dt = 1./252) {
gbm <- matrix(ncol = nsim, nrow = t)
for (simu in 1:nsim) {
gbm[1, simu] <- S0
for (day in 2:t) {
epsilon <- rnorm(1)
dt = 1 / 365
gbm[day, simu] <- gbm[(day-1), simu] * exp((mu - sigma * sigma / 2) * dt + sigma * epsilon * sqrt(dt))
}
}
return(gbm)
}
library(tidyverse)
nsim <- 1
t <- 30
mu <- (gold[30,9] +1)^252)-1
library(tidyverse)
nsim <- 1
t <- 30
mu <- (gold[30,9] +1)^252-1
sigma <- gold[30,10] * sqrt(252)
S0 <- gold[30,2]
gbm <- gbm_loop(nsim, t, mu, sigma, S0)
gbm_df <- as.data.frame(gbm) %>%
mutate(ix = 1:nrow(gbm)) %>%
pivot_longer(-ix, names_to = 'sim', values_to = 'price')
gbm_df <- data.frame(gbm_df, actual=gold$Value[30:59])
gbm_df %>%
ggplot(aes(x=ix)) +
geom_line(aes(y =price)) +
geom_line(aes(y =actual)) +
theme(legend.position = 'none')
library(tidyverse)
nsim <- 1
t <- 30
mu <- (gold[30,7] +1)^252-1
sigma <- gold[30,8] * sqrt(252)
S0 <- gold[30,2]
gbm <- gbm_loop(nsim, t, mu, sigma, S0)
gbm_df <- as.data.frame(gbm) %>%
mutate(ix = 1:nrow(gbm)) %>%
pivot_longer(-ix, names_to = 'sim', values_to = 'price')
gbm_df <- data.frame(gbm_df, actual=gold$Value[30:59])
gbm_df %>%
ggplot(aes(x=ix)) +
geom_line(aes(y =price)) +
geom_line(aes(y =actual)) +
theme(legend.position = 'none')
library(tidyverse)
nsim <- 1
t <- 30
mu <- gold[30,7]
sigma <- gold[30,8] * sqrt(252)
S0 <- gold[30,2]
gbm <- gbm_loop(nsim, t, mu, sigma, S0)
gbm_df <- as.data.frame(gbm) %>%
mutate(ix = 1:nrow(gbm)) %>%
pivot_longer(-ix, names_to = 'sim', values_to = 'price')
gbm_df <- data.frame(gbm_df, actual=gold$Value[30:59])
gbm_df %>%
ggplot(aes(x=ix)) +
geom_line(aes(y =price)) +
geom_line(aes(y =actual)) +
theme(legend.position = 'none')
library(tidyverse)
nsim <- 1
t <- 30
mu <- (gold[30,7] +1)^252-1
sigma <- gold[30,8] * sqrt(252)
S0 <- gold[30,2]
gbm <- gbm_loop(nsim, t, mu, sigma, S0)
gbm_df <- as.data.frame(gbm) %>%
mutate(ix = 1:nrow(gbm)) %>%
pivot_longer(-ix, names_to = 'sim', values_to = 'price')
gbm_df <- data.frame(gbm_df, actual=gold$Value[30:59])
gbm_df %>%
ggplot(aes(x=ix)) +
geom_line(aes(y =price)) +
geom_line(aes(y =actual)) +
theme(legend.position = 'none')
library(tidyverse)
nsim <- 1
t <- 30
mu <- (gold[30,7] +1)^252-1
sigma <- gold[30,8] * sqrt(252)
S0 <- gold[30,2]
gbm <- gbm_loop(nsim, t, mu, sigma, S0)
gbm_df <- as.data.frame(gbm) %>%
mutate(ix = 1:nrow(gbm)) %>%
pivot_longer(-ix, names_to = 'sim', values_to = 'price')
gbm_df <- data.frame(gbm_df, actual=gold$Value[30:59])
gbm_df %>%
ggplot(aes(x=ix)) +
geom_line(aes(y =price)) +
geom_line(aes(y =actual)) +
theme(legend.position = 'none')
